{"ast":null,"code":"var _jsxFileName = \"/Users/quinnouyang/Documents/GitHub/Group65-FA21/Research/qouyang3/my-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n    this.styles = {\n      fontSize: \"50px\",\n      fontWeight: \"bold\"\n    };\n\n    this.handleIncrement = () => {\n      //  console.log(product);\n      this.setState({\n        value: this.state.value * 2 + 1\n      });\n    };\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 bg-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value\n    } = this.state;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // onClick={() => this.handleIncrement(product)}\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/quinnouyang/Documents/GitHub/Group65-FA21/Research/qouyang3/my-app/src/components/counter.jsx"],"names":["React","Component","Badge","Counter","state","value","props","tags","styles","fontSize","fontWeight","handleIncrement","setState","getBadgeClasses","classes","formatCount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACC,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADZ;AAENE,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KAD4B;AAAA,SAKpCC,MALoC,GAK3B;AACPC,MAAAA,QAAQ,EAAE,MADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,KAL2B;;AAAA,SAyBpCC,eAzBoC,GAyBlB,MAAM;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAnB,GAAuB;AAAhC,OAAd;AACD,KA5BmC;AAAA;;AA8BpCQ,EAAAA,eAAe,GAAG;AAChB,QAAIC,OAAO,GAAG,eAAd;AACAA,IAAAA,OAAO,IAAI,KAAKV,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOS,OAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAE,KAAKH,eAAL,EAAjB;AAAA,kBAA0C,KAAKE,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE;AACA,QAAA,OAAO,EAAE,KAAKJ,eAFhB;AAGE,QAAA,SAAS,EAAC,0BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAxDmC;;AA2DtC,eAAeR,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\n\nclass Counter extends React.Component {\n  state = {\n    value: this.props.value,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n  styles = {\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n  };\n\n  /*\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    else\n      return (\n        <ul>\n          {this.state.tags.map((tag) => (\n            <li key={tag}>{tag}</li>\n          ))}\n        </ul>\n      );\n  }\n  */\n\n  //handleIncrement = (product) => {\n  handleIncrement = () => {\n    //  console.log(product);\n    this.setState({ value: this.state.value * 2 + 1 });\n  };\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 bg-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.state;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n  render() {\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          // onClick={() => this.handleIncrement(product)}\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n        {/*{this.state.tags.length == 0 && \"Please create a new tag!\"}\n        {this.renderTags()}*/}\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}